/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class com_clark_glfw3_Monitor */

#ifndef _Included_com_clark_glfw3_Monitor
#define _Included_com_clark_glfw3_Monitor
#ifdef __cplusplus
extern "C" {
#endif
#undef com_clark_glfw3_Monitor_GLFW_NOT_INITIALIZED
#define com_clark_glfw3_Monitor_GLFW_NOT_INITIALIZED 65537L
#undef com_clark_glfw3_Monitor_GLFW_NO_CURRENT_CONTEXT
#define com_clark_glfw3_Monitor_GLFW_NO_CURRENT_CONTEXT 65538L
#undef com_clark_glfw3_Monitor_GLFW_INVALID_ENUM
#define com_clark_glfw3_Monitor_GLFW_INVALID_ENUM 65539L
#undef com_clark_glfw3_Monitor_GLFW_INVALID_VALUE
#define com_clark_glfw3_Monitor_GLFW_INVALID_VALUE 65540L
#undef com_clark_glfw3_Monitor_GLFW_OUT_OF_MEMORY
#define com_clark_glfw3_Monitor_GLFW_OUT_OF_MEMORY 65541L
#undef com_clark_glfw3_Monitor_GLFW_API_UNAVAILABLE
#define com_clark_glfw3_Monitor_GLFW_API_UNAVAILABLE 65542L
#undef com_clark_glfw3_Monitor_GLFW_VERSION_UNAVAILABLE
#define com_clark_glfw3_Monitor_GLFW_VERSION_UNAVAILABLE 65543L
#undef com_clark_glfw3_Monitor_GLFW_PLATFORM_ERROR
#define com_clark_glfw3_Monitor_GLFW_PLATFORM_ERROR 65544L
#undef com_clark_glfw3_Monitor_GLFW_FORMAT_UNAVAILABLE
#define com_clark_glfw3_Monitor_GLFW_FORMAT_UNAVAILABLE 65545L
/*
 * Class:     com_clark_glfw3_Monitor
 * Method:    GetMonitors
 * Signature: ()[J
 */
JNIEXPORT jlongArray JNICALL Java_com_clark_glfw3_Monitor_GetMonitors
  (JNIEnv *, jclass);

/*
 * Class:     com_clark_glfw3_Monitor
 * Method:    GetPrimaryMonitor
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_com_clark_glfw3_Monitor_GetPrimaryMonitor
  (JNIEnv *, jclass);

/*
 * Class:     com_clark_glfw3_Monitor
 * Method:    GetPosition
 * Signature: (J)Lcom/clark/glfw3/Rectangle;
 */
JNIEXPORT jobject JNICALL Java_com_clark_glfw3_Monitor_GetPosition
  (JNIEnv *, jclass, jlong);

/*
 * Class:     com_clark_glfw3_Monitor
 * Method:    GetPhysicalSize
 * Signature: (J)Lcom/clark/glfw3/Rectangle;
 */
JNIEXPORT jobject JNICALL Java_com_clark_glfw3_Monitor_GetPhysicalSize
  (JNIEnv *, jclass, jlong);

/*
 * Class:     com_clark_glfw3_Monitor
 * Method:    GetName
 * Signature: (J)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_com_clark_glfw3_Monitor_GetName
  (JNIEnv *, jclass, jlong);

/*
 * Class:     com_clark_glfw3_Monitor
 * Method:    GetVideoModes
 * Signature: (J)[Lcom/clark/glfw3/VideoMode;
 */
JNIEXPORT jobjectArray JNICALL Java_com_clark_glfw3_Monitor_GetVideoModes
  (JNIEnv *, jclass, jlong);

/*
 * Class:     com_clark_glfw3_Monitor
 * Method:    GetCurrentVideoMode
 * Signature: (J)Lcom/clark/glfw3/VideoMode;
 */
JNIEXPORT jobject JNICALL Java_com_clark_glfw3_Monitor_GetCurrentVideoMode
  (JNIEnv *, jclass, jlong);

/*
 * Class:     com_clark_glfw3_Monitor
 * Method:    SetGamma
 * Signature: (JF)V
 */
JNIEXPORT void JNICALL Java_com_clark_glfw3_Monitor_SetGamma
  (JNIEnv *, jclass, jlong, jfloat);

/*
 * Class:     com_clark_glfw3_Monitor
 * Method:    GetGammaRamp
 * Signature: (J)Lcom/clark/glfw3/GammaRamp;
 */
JNIEXPORT jobject JNICALL Java_com_clark_glfw3_Monitor_GetGammaRamp
  (JNIEnv *, jclass, jlong);

/*
 * Class:     com_clark_glfw3_Monitor
 * Method:    SetGammaRamp
 * Signature: (JLcom/clark/glfw3/GammaRamp;)V
 */
JNIEXPORT void JNICALL Java_com_clark_glfw3_Monitor_SetGammaRamp
  (JNIEnv *, jclass, jlong, jobject);

/*
 * Class:     com_clark_glfw3_Monitor
 * Method:    SetMonitorCallback
 * Signature: (JLcom/clark/glfw3/Monitor$MonitorCallback;)Lcom/clark/glfw3/Monitor$MonitorCallback;
 */
JNIEXPORT jobject JNICALL Java_com_clark_glfw3_Monitor_SetMonitorCallback
  (JNIEnv *, jclass, jlong, jobject);

#ifdef __cplusplus
}
#endif
#endif
